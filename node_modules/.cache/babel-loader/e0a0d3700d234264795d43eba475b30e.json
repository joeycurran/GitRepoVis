{"ast":null,"code":"\"use strict\";\n\nmodule.exports = orderSegments;\n\nvar orient = require(\"robust-orientation\");\n\nfunction horizontalOrder(a, b) {\n  var bl, br;\n\n  if (b[0][0] < b[1][0]) {\n    bl = b[0];\n    br = b[1];\n  } else if (b[0][0] > b[1][0]) {\n    bl = b[1];\n    br = b[0];\n  } else {\n    var alo = Math.min(a[0][1], a[1][1]);\n    var ahi = Math.max(a[0][1], a[1][1]);\n    var blo = Math.min(b[0][1], b[1][1]);\n    var bhi = Math.max(b[0][1], b[1][1]);\n\n    if (ahi < blo) {\n      return ahi - blo;\n    }\n\n    if (alo > bhi) {\n      return alo - bhi;\n    }\n\n    return ahi - bhi;\n  }\n\n  var al, ar;\n\n  if (a[0][1] < a[1][1]) {\n    al = a[0];\n    ar = a[1];\n  } else {\n    al = a[1];\n    ar = a[0];\n  }\n\n  var d = orient(br, bl, al);\n\n  if (d) {\n    return d;\n  }\n\n  d = orient(br, bl, ar);\n\n  if (d) {\n    return d;\n  }\n\n  return ar - br;\n}\n\nfunction orderSegments(b, a) {\n  var al, ar;\n\n  if (a[0][0] < a[1][0]) {\n    al = a[0];\n    ar = a[1];\n  } else if (a[0][0] > a[1][0]) {\n    al = a[1];\n    ar = a[0];\n  } else {\n    return horizontalOrder(a, b);\n  }\n\n  var bl, br;\n\n  if (b[0][0] < b[1][0]) {\n    bl = b[0];\n    br = b[1];\n  } else if (b[0][0] > b[1][0]) {\n    bl = b[1];\n    br = b[0];\n  } else {\n    return -horizontalOrder(b, a);\n  }\n\n  var d1 = orient(al, ar, br);\n  var d2 = orient(al, ar, bl);\n\n  if (d1 < 0) {\n    if (d2 <= 0) {\n      return d1;\n    }\n  } else if (d1 > 0) {\n    if (d2 >= 0) {\n      return d1;\n    }\n  } else if (d2) {\n    return d2;\n  }\n\n  d1 = orient(br, bl, ar);\n  d2 = orient(br, bl, al);\n\n  if (d1 < 0) {\n    if (d2 <= 0) {\n      return d1;\n    }\n  } else if (d1 > 0) {\n    if (d2 >= 0) {\n      return d1;\n    }\n  } else if (d2) {\n    return d2;\n  }\n\n  return ar[0] - br[0];\n}","map":null,"metadata":{},"sourceType":"script"}