{"ast":null,"code":"module.exports = compareCells;\nvar min = Math.min;\n\nfunction compareInt(a, b) {\n  return a - b;\n}\n\nfunction compareCells(a, b) {\n  var n = a.length,\n      t = a.length - b.length;\n\n  if (t) {\n    return t;\n  }\n\n  switch (n) {\n    case 0:\n      return 0;\n\n    case 1:\n      return a[0] - b[0];\n\n    case 2:\n      return a[0] + a[1] - b[0] - b[1] || min(a[0], a[1]) - min(b[0], b[1]);\n\n    case 3:\n      var l1 = a[0] + a[1],\n          m1 = b[0] + b[1];\n      t = l1 + a[2] - (m1 + b[2]);\n\n      if (t) {\n        return t;\n      }\n\n      var l0 = min(a[0], a[1]),\n          m0 = min(b[0], b[1]);\n      return min(l0, a[2]) - min(m0, b[2]) || min(l0 + a[2], l1) - min(m0 + b[2], m1);\n\n    case 4:\n      var aw = a[0],\n          ax = a[1],\n          ay = a[2],\n          az = a[3],\n          bw = b[0],\n          bx = b[1],\n          by = b[2],\n          bz = b[3];\n      return aw + ax + ay + az - (bw + bx + by + bz) || min(aw, ax, ay, az) - min(bw, bx, by, bz, bw) || min(aw + ax, aw + ay, aw + az, ax + ay, ax + az, ay + az) - min(bw + bx, bw + by, bw + bz, bx + by, bx + bz, by + bz) || min(aw + ax + ay, aw + ax + az, aw + ay + az, ax + ay + az) - min(bw + bx + by, bw + bx + bz, bw + by + bz, bx + by + bz);\n\n    default:\n      var as = a.slice().sort(compareInt);\n      var bs = b.slice().sort(compareInt);\n\n      for (var i = 0; i < n; ++i) {\n        t = as[i] - bs[i];\n\n        if (t) {\n          return t;\n        }\n      }\n\n      return 0;\n  }\n}","map":null,"metadata":{},"sourceType":"script"}