{"ast":null,"code":"'use strict';\n\nmodule.exports = solveIntersection;\n\nvar ratMul = require('big-rat/mul');\n\nvar ratDiv = require('big-rat/div');\n\nvar ratSub = require('big-rat/sub');\n\nvar ratSign = require('big-rat/sign');\n\nvar rvSub = require('rat-vec/sub');\n\nvar rvAdd = require('rat-vec/add');\n\nvar rvMuls = require('rat-vec/muls');\n\nfunction ratPerp(a, b) {\n  return ratSub(ratMul(a[0], b[1]), ratMul(a[1], b[0]));\n} // Solve for intersection\n//  x = a + t (b-a)\n//  (x - c) ^ (d-c) = 0\n//  (t * (b-a) + (a-c) ) ^ (d-c) = 0\n//  t * (b-a)^(d-c) = (d-c)^(a-c)\n//  t = (d-c)^(a-c) / (b-a)^(d-c)\n\n\nfunction solveIntersection(a, b, c, d) {\n  var ba = rvSub(b, a);\n  var dc = rvSub(d, c);\n  var baXdc = ratPerp(ba, dc);\n\n  if (ratSign(baXdc) === 0) {\n    return null;\n  }\n\n  var ac = rvSub(a, c);\n  var dcXac = ratPerp(dc, ac);\n  var t = ratDiv(dcXac, baXdc);\n  var s = rvMuls(ba, t);\n  var r = rvAdd(a, s);\n  return r;\n}","map":null,"metadata":{},"sourceType":"script"}