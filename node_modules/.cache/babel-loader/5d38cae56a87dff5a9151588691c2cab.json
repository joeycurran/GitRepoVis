{"ast":null,"code":"\"use strict\";\n\nmodule.exports = compareAngle;\n\nvar orient = require(\"robust-orientation\");\n\nvar sgn = require(\"signum\");\n\nvar twoSum = require(\"two-sum\");\n\nvar robustProduct = require(\"robust-product\");\n\nvar robustSum = require(\"robust-sum\");\n\nfunction testInterior(a, b, c) {\n  var x0 = twoSum(a[0], -b[0]);\n  var y0 = twoSum(a[1], -b[1]);\n  var x1 = twoSum(c[0], -b[0]);\n  var y1 = twoSum(c[1], -b[1]);\n  var d = robustSum(robustProduct(x0, x1), robustProduct(y0, y1));\n  return d[d.length - 1] >= 0;\n}\n\nfunction compareAngle(a, b, c, d) {\n  var bcd = orient(b, c, d);\n\n  if (bcd === 0) {\n    //Handle degenerate cases\n    var sabc = sgn(orient(a, b, c));\n    var sabd = sgn(orient(a, b, d));\n\n    if (sabc === sabd) {\n      if (sabc === 0) {\n        var ic = testInterior(a, b, c);\n        var id = testInterior(a, b, d);\n\n        if (ic === id) {\n          return 0;\n        } else if (ic) {\n          return 1;\n        } else {\n          return -1;\n        }\n      }\n\n      return 0;\n    } else if (sabd === 0) {\n      if (sabc > 0) {\n        return -1;\n      } else if (testInterior(a, b, d)) {\n        return -1;\n      } else {\n        return 1;\n      }\n    } else if (sabc === 0) {\n      if (sabd > 0) {\n        return 1;\n      } else if (testInterior(a, b, c)) {\n        return 1;\n      } else {\n        return -1;\n      }\n    }\n\n    return sgn(sabd - sabc);\n  }\n\n  var abc = orient(a, b, c);\n\n  if (abc > 0) {\n    if (bcd > 0 && orient(a, b, d) > 0) {\n      return 1;\n    }\n\n    return -1;\n  } else if (abc < 0) {\n    if (bcd > 0 || orient(a, b, d) > 0) {\n      return 1;\n    }\n\n    return -1;\n  } else {\n    var abd = orient(a, b, d);\n\n    if (abd > 0) {\n      return 1;\n    } else {\n      if (testInterior(a, b, c)) {\n        return 1;\n      } else {\n        return -1;\n      }\n    }\n  }\n}","map":null,"metadata":{},"sourceType":"script"}