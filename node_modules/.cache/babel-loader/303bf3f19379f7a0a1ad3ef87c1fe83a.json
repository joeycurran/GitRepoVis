{"ast":null,"code":"'use strict';\n\nmodule.exports = trimLeaves;\n\nvar e2a = require('edges-to-adjacency-list');\n\nfunction trimLeaves(edges, positions) {\n  var adj = e2a(edges, positions.length);\n  var live = new Array(positions.length);\n  var nbhd = new Array(positions.length);\n  var dead = [];\n\n  for (var i = 0; i < positions.length; ++i) {\n    var count = adj[i].length;\n    nbhd[i] = count;\n    live[i] = true;\n\n    if (count <= 1) {\n      dead.push(i);\n    }\n  }\n\n  while (dead.length > 0) {\n    var v = dead.pop();\n    live[v] = false;\n    var n = adj[v];\n\n    for (var i = 0; i < n.length; ++i) {\n      var u = n[i];\n\n      if (--nbhd[u] === 0) {\n        dead.push(u);\n      }\n    }\n  }\n\n  var newIndex = new Array(positions.length);\n  var npositions = [];\n\n  for (var i = 0; i < positions.length; ++i) {\n    if (live[i]) {\n      var v = npositions.length;\n      newIndex[i] = v;\n      npositions.push(positions[i]);\n    } else {\n      newIndex[i] = -1;\n    }\n  }\n\n  var nedges = [];\n\n  for (var i = 0; i < edges.length; ++i) {\n    var e = edges[i];\n\n    if (live[e[0]] && live[e[1]]) {\n      nedges.push([newIndex[e[0]], newIndex[e[1]]]);\n    }\n  }\n\n  return [nedges, npositions];\n}","map":null,"metadata":{},"sourceType":"script"}