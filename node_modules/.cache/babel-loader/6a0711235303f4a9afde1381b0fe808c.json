{"ast":null,"code":"module.exports = transformQuat;\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nfunction transformQuat(out, a, q) {\n  // benchmarks: http://jsperf.com/quaternion-transform-vec3-implementations\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      // calculate quat * vec\n  ix = qw * x + qy * z - qz * y,\n      iy = qw * y + qz * x - qx * z,\n      iz = qw * z + qx * y - qy * x,\n      iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  return out;\n}","map":null,"metadata":{},"sourceType":"script"}