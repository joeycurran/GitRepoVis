{"ast":null,"code":"const Component = React.Component;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: 'simonswiss',\n      realName: '',\n      avatar: '',\n      location: '',\n      repos: '',\n      followers: '',\n      url: '',\n      notFound: ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", null, React.createElement(SearchBox, {\n      fetchUser: this.fetchUser.bind(this)\n    }), React.createElement(Card, {\n      data: this.state\n    }));\n  } // the api request function\n\n\n  fetchApi(url) {\n    fetch(url).then(res => res.json()).then(data => {\n      // update state with API data\n      this.setState({\n        username: data.login,\n        realName: data.name,\n        avatar: data.avatar_url,\n        location: data.location,\n        repos: data.public_repos,\n        followers: data.followers,\n        url: data.html_url,\n        notFound: data.message\n      });\n    }).catch(err => console.log('oh no!'));\n  }\n\n  fetchUser(username) {\n    let url = \"https://api.github.com/users/\".concat(username);\n    this.fetchApi(url);\n  }\n\n  componentDidMount() {\n    let url = \"https://api.github.com/users/\".concat(this.state.username);\n    this.fetchApi(url);\n  }\n\n}\n\nclass SearchBox extends Component {\n  render() {\n    return React.createElement(\"form\", {\n      className: \"searchbox\",\n      onSubmit: this.handleClick.bind(this)\n    }, React.createElement(\"input\", {\n      ref: \"search\",\n      className: \"searchbox__input\",\n      type: \"text\",\n      placeholder: \"type username...\"\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"searchbox__button\",\n      value: \"Search GitHub User\"\n    }));\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    let username = this.refs.search.getDOMNode().value; // sending the username value to parent component to fetch new data from API\n\n    this.props.fetchUser(username);\n    this.refs.search.getDOMNode().value = '';\n  }\n\n}\n\nclass Card extends Component {\n  render() {\n    let data = this.props.data;\n\n    if (data.notFound === 'Not Found') {\n      // when username is not found...\n      return React.createElement(\"h3\", {\n        className: \"card__notfound\"\n      }, \"User not found. Try again!\");\n    } else {\n      // if username found, then...\n      return React.createElement(\"div\", {\n        className: \"card\"\n      }, React.createElement(\"a\", {\n        href: data.url,\n        target: \"_blank\"\n      }, React.createElement(\"img\", {\n        className: \"card__avatar\",\n        src: data.avatar\n      })), React.createElement(\"h2\", {\n        className: \"card__username\"\n      }, React.createElement(\"a\", {\n        className: \"card__link\",\n        href: data.url,\n        target: \"_blank\"\n      }, data.username)), React.createElement(\"dl\", null, React.createElement(\"dt\", null, \"Real name\"), React.createElement(\"dd\", null, data.realName), React.createElement(\"dt\", null, \"Location\"), React.createElement(\"dd\", null, data.location), React.createElement(\"dt\", null, \"Number of public repos\"), React.createElement(\"dd\", null, data.repos), React.createElement(\"dt\", null, \"Number of followers\"), React.createElement(\"dd\", null, data.followers)));\n    }\n  }\n\n}\n\nReact.render(React.createElement(App, null), document.getElementById('app'));","map":{"version":3,"sources":["/Users/joeycurran/Desktop/githubvisual/src/App.jsx"],"names":["Component","React","App","constructor","props","state","username","realName","avatar","location","repos","followers","url","notFound","render","createElement","SearchBox","fetchUser","bind","Card","data","fetchApi","fetch","then","res","json","setState","login","name","avatar_url","public_repos","html_url","message","catch","err","console","log","componentDidMount","className","onSubmit","handleClick","ref","type","placeholder","value","e","preventDefault","refs","search","getDOMNode","href","target","src","document","getElementById"],"mappings":"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","sourcesContent":["const Component = React.Component;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: 'simonswiss',\n      realName: '',\n      avatar: '',\n      location: '',\n      repos: '',\n      followers: '',\n      url: '',\n      notFound: '' };\n\n  }\n  render() {\n    return (\n      React.createElement(\"div\", null,\n      React.createElement(SearchBox, { fetchUser: this.fetchUser.bind(this) }),\n      React.createElement(Card, { data: this.state })));\n\n\n  }\n\n  // the api request function\n  fetchApi(url) {\n\n    fetch(url).\n    then(res => res.json()).\n    then(data => {\n\n      // update state with API data\n      this.setState({\n        username: data.login,\n        realName: data.name,\n        avatar: data.avatar_url,\n        location: data.location,\n        repos: data.public_repos,\n        followers: data.followers,\n        url: data.html_url,\n        notFound: data.message });\n\n    }).\n    catch(err => console.log('oh no!'));\n  }\n\n  fetchUser(username) {\n    let url = `https://api.github.com/users/${username}`;\n    this.fetchApi(url);\n  }\n\n  componentDidMount() {\n    let url = `https://api.github.com/users/${this.state.username}`;\n    this.fetchApi(url);\n  }}\n\n\nclass SearchBox extends Component {\n  render() {\n    return (\n      React.createElement(\"form\", {\n        className: \"searchbox\",\n        onSubmit: this.handleClick.bind(this) },\n      React.createElement(\"input\", {\n        ref: \"search\",\n        className: \"searchbox__input\",\n        type: \"text\",\n        placeholder: \"type username...\" }),\n\n      React.createElement(\"input\", {\n        type: \"submit\",\n        className: \"searchbox__button\",\n        value: \"Search GitHub User\" })));\n\n\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    let username = this.refs.search.getDOMNode().value;\n    // sending the username value to parent component to fetch new data from API\n    this.props.fetchUser(username);\n    this.refs.search.getDOMNode().value = '';\n  }}\n\n\nclass Card extends Component {\n  render() {\n    let data = this.props.data;\n\n    if (data.notFound === 'Not Found') {\n      // when username is not found...\n      return React.createElement(\"h3\", { className: \"card__notfound\" }, \"User not found. Try again!\");\n    } else {\n      // if username found, then...\n      return (\n        React.createElement(\"div\", { className: \"card\" },\n        React.createElement(\"a\", { href: data.url, target: \"_blank\" },\n        React.createElement(\"img\", { className: \"card__avatar\", src: data.avatar })),\n\n        React.createElement(\"h2\", { className: \"card__username\" },\n        React.createElement(\"a\", { className: \"card__link\", href: data.url, target: \"_blank\" }, data.username)),\n        React.createElement(\"dl\", null,\n        React.createElement(\"dt\", null, \"Real name\"),\n        React.createElement(\"dd\", null, data.realName),\n\n        React.createElement(\"dt\", null, \"Location\"),\n        React.createElement(\"dd\", null, data.location),\n\n        React.createElement(\"dt\", null, \"Number of public repos\"),\n        React.createElement(\"dd\", null, data.repos),\n\n        React.createElement(\"dt\", null, \"Number of followers\"),\n        React.createElement(\"dd\", null, data.followers))));\n\n\n\n    }\n  }}\n\n\nReact.render(React.createElement(App, null), document.getElementById('app'));"]},"metadata":{},"sourceType":"module"}