{"ast":null,"code":"'use strict';\n\nmodule.exports = createSpikes2D;\n\nfunction GLSpikes2D(plot) {\n  this.plot = plot;\n  this.enable = [true, true, false, false];\n  this.width = [1, 1, 1, 1];\n  this.color = [[0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]];\n  this.center = [Infinity, Infinity];\n}\n\nvar proto = GLSpikes2D.prototype;\n\nproto.update = function (options) {\n  options = options || {};\n  this.enable = (options.enable || [true, true, false, false]).slice();\n  this.width = (options.width || [1, 1, 1, 1]).slice();\n  this.color = (options.color || [[0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]]).map(function (x) {\n    return x.slice();\n  });\n  this.center = (options.center || [Infinity, Infinity]).slice();\n  this.plot.setOverlayDirty();\n};\n\nproto.draw = function () {\n  var spikeEnable = this.enable;\n  var spikeWidth = this.width;\n  var spikeColor = this.color;\n  var spikeCenter = this.center;\n  var plot = this.plot;\n  var line = plot.line;\n  var dataBox = plot.dataBox;\n  var viewPixels = plot.viewBox;\n  line.bind();\n\n  if (dataBox[0] <= spikeCenter[0] && spikeCenter[0] <= dataBox[2] && dataBox[1] <= spikeCenter[1] && spikeCenter[1] <= dataBox[3]) {\n    var centerX = viewPixels[0] + (spikeCenter[0] - dataBox[0]) / (dataBox[2] - dataBox[0]) * (viewPixels[2] - viewPixels[0]);\n    var centerY = viewPixels[1] + (spikeCenter[1] - dataBox[1]) / (dataBox[3] - dataBox[1]) * (viewPixels[3] - viewPixels[1]);\n\n    if (spikeEnable[0]) {\n      line.drawLine(centerX, centerY, viewPixels[0], centerY, spikeWidth[0], spikeColor[0]);\n    }\n\n    if (spikeEnable[1]) {\n      line.drawLine(centerX, centerY, centerX, viewPixels[1], spikeWidth[1], spikeColor[1]);\n    }\n\n    if (spikeEnable[2]) {\n      line.drawLine(centerX, centerY, viewPixels[2], centerY, spikeWidth[2], spikeColor[2]);\n    }\n\n    if (spikeEnable[3]) {\n      line.drawLine(centerX, centerY, centerX, viewPixels[3], spikeWidth[3], spikeColor[3]);\n    }\n  }\n};\n\nproto.dispose = function () {\n  this.plot.removeOverlay(this);\n};\n\nfunction createSpikes2D(plot, options) {\n  var spikes = new GLSpikes2D(plot);\n  spikes.update(options);\n  plot.addOverlay(spikes);\n  return spikes;\n}","map":null,"metadata":{},"sourceType":"script"}