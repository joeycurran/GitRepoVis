{"ast":null,"code":"'use strict';\n\nmodule.exports = affineHull;\n\nvar orient = require('robust-orientation');\n\nfunction linearlyIndependent(points, d) {\n  var nhull = new Array(d + 1);\n\n  for (var i = 0; i < points.length; ++i) {\n    nhull[i] = points[i];\n  }\n\n  for (var i = 0; i <= points.length; ++i) {\n    for (var j = points.length; j <= d; ++j) {\n      var x = new Array(d);\n\n      for (var k = 0; k < d; ++k) {\n        x[k] = Math.pow(j + 1 - i, k);\n      }\n\n      nhull[j] = x;\n    }\n\n    var o = orient.apply(void 0, nhull);\n\n    if (o) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction affineHull(points) {\n  var n = points.length;\n\n  if (n === 0) {\n    return [];\n  }\n\n  if (n === 1) {\n    return [0];\n  }\n\n  var d = points[0].length;\n  var frame = [points[0]];\n  var index = [0];\n\n  for (var i = 1; i < n; ++i) {\n    frame.push(points[i]);\n\n    if (!linearlyIndependent(frame, d)) {\n      frame.pop();\n      continue;\n    }\n\n    index.push(i);\n\n    if (index.length === d + 1) {\n      return index;\n    }\n  }\n\n  return index;\n}","map":null,"metadata":{},"sourceType":"script"}