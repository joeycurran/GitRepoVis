{"ast":null,"code":"\"use strict\";\n\nvar twoProduct = require(\"two-product\");\n\nvar robustSum = require(\"robust-sum\");\n\nvar robustScale = require(\"robust-scale\");\n\nvar robustSubtract = require(\"robust-subtract\");\n\nvar NUM_EXPAND = 5;\nvar EPSILON = 1.1102230246251565e-16;\nvar ERRBOUND3 = (3.0 + 16.0 * EPSILON) * EPSILON;\nvar ERRBOUND4 = (7.0 + 56.0 * EPSILON) * EPSILON;\n\nfunction cofactor(m, c) {\n  var result = new Array(m.length - 1);\n\n  for (var i = 1; i < m.length; ++i) {\n    var r = result[i - 1] = new Array(m.length - 1);\n\n    for (var j = 0, k = 0; j < m.length; ++j) {\n      if (j === c) {\n        continue;\n      }\n\n      r[k++] = m[i][j];\n    }\n  }\n\n  return result;\n}\n\nfunction matrix(n) {\n  var result = new Array(n);\n\n  for (var i = 0; i < n; ++i) {\n    result[i] = new Array(n);\n\n    for (var j = 0; j < n; ++j) {\n      result[i][j] = [\"m\", j, \"[\", n - i - 1, \"]\"].join(\"\");\n    }\n  }\n\n  return result;\n}\n\nfunction sign(n) {\n  if (n & 1) {\n    return \"-\";\n  }\n\n  return \"\";\n}\n\nfunction generateSum(expr) {\n  if (expr.length === 1) {\n    return expr[0];\n  } else if (expr.length === 2) {\n    return [\"sum(\", expr[0], \",\", expr[1], \")\"].join(\"\");\n  } else {\n    var m = expr.length >> 1;\n    return [\"sum(\", generateSum(expr.slice(0, m)), \",\", generateSum(expr.slice(m)), \")\"].join(\"\");\n  }\n}\n\nfunction determinant(m) {\n  if (m.length === 2) {\n    return [[\"sum(prod(\", m[0][0], \",\", m[1][1], \"),prod(-\", m[0][1], \",\", m[1][0], \"))\"].join(\"\")];\n  } else {\n    var expr = [];\n\n    for (var i = 0; i < m.length; ++i) {\n      expr.push([\"scale(\", generateSum(determinant(cofactor(m, i))), \",\", sign(i), m[0][i], \")\"].join(\"\"));\n    }\n\n    return expr;\n  }\n}\n\nfunction orientation(n) {\n  var pos = [];\n  var neg = [];\n  var m = matrix(n);\n  var args = [];\n\n  for (var i = 0; i < n; ++i) {\n    if ((i & 1) === 0) {\n      pos.push.apply(pos, determinant(cofactor(m, i)));\n    } else {\n      neg.push.apply(neg, determinant(cofactor(m, i)));\n    }\n\n    args.push(\"m\" + i);\n  }\n\n  var posExpr = generateSum(pos);\n  var negExpr = generateSum(neg);\n  var funcName = \"orientation\" + n + \"Exact\";\n  var code = [\"function \", funcName, \"(\", args.join(), \"){var p=\", posExpr, \",n=\", negExpr, \",d=sub(p,n);\\\nreturn d[d.length-1];};return \", funcName].join(\"\");\n  var proc = new Function(\"sum\", \"prod\", \"scale\", \"sub\", code);\n  return proc(robustSum, twoProduct, robustScale, robustSubtract);\n}\n\nvar orientation3Exact = orientation(3);\nvar orientation4Exact = orientation(4);\nvar CACHED = [function orientation0() {\n  return 0;\n}, function orientation1() {\n  return 0;\n}, function orientation2(a, b) {\n  return b[0] - a[0];\n}, function orientation3(a, b, c) {\n  var l = (a[1] - c[1]) * (b[0] - c[0]);\n  var r = (a[0] - c[0]) * (b[1] - c[1]);\n  var det = l - r;\n  var s;\n\n  if (l > 0) {\n    if (r <= 0) {\n      return det;\n    } else {\n      s = l + r;\n    }\n  } else if (l < 0) {\n    if (r >= 0) {\n      return det;\n    } else {\n      s = -(l + r);\n    }\n  } else {\n    return det;\n  }\n\n  var tol = ERRBOUND3 * s;\n\n  if (det >= tol || det <= -tol) {\n    return det;\n  }\n\n  return orientation3Exact(a, b, c);\n}, function orientation4(a, b, c, d) {\n  var adx = a[0] - d[0];\n  var bdx = b[0] - d[0];\n  var cdx = c[0] - d[0];\n  var ady = a[1] - d[1];\n  var bdy = b[1] - d[1];\n  var cdy = c[1] - d[1];\n  var adz = a[2] - d[2];\n  var bdz = b[2] - d[2];\n  var cdz = c[2] - d[2];\n  var bdxcdy = bdx * cdy;\n  var cdxbdy = cdx * bdy;\n  var cdxady = cdx * ady;\n  var adxcdy = adx * cdy;\n  var adxbdy = adx * bdy;\n  var bdxady = bdx * ady;\n  var det = adz * (bdxcdy - cdxbdy) + bdz * (cdxady - adxcdy) + cdz * (adxbdy - bdxady);\n  var permanent = (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * Math.abs(adz) + (Math.abs(cdxady) + Math.abs(adxcdy)) * Math.abs(bdz) + (Math.abs(adxbdy) + Math.abs(bdxady)) * Math.abs(cdz);\n  var tol = ERRBOUND4 * permanent;\n\n  if (det > tol || -det > tol) {\n    return det;\n  }\n\n  return orientation4Exact(a, b, c, d);\n}];\n\nfunction slowOrient(args) {\n  var proc = CACHED[args.length];\n\n  if (!proc) {\n    proc = CACHED[args.length] = orientation(args.length);\n  }\n\n  return proc.apply(undefined, args);\n}\n\nfunction generateOrientationProc() {\n  while (CACHED.length <= NUM_EXPAND) {\n    CACHED.push(orientation(CACHED.length));\n  }\n\n  var args = [];\n  var procArgs = [\"slow\"];\n\n  for (var i = 0; i <= NUM_EXPAND; ++i) {\n    args.push(\"a\" + i);\n    procArgs.push(\"o\" + i);\n  }\n\n  var code = [\"function getOrientation(\", args.join(), \"){switch(arguments.length){case 0:case 1:return 0;\"];\n\n  for (var i = 2; i <= NUM_EXPAND; ++i) {\n    code.push(\"case \", i, \":return o\", i, \"(\", args.slice(0, i).join(), \");\");\n  }\n\n  code.push(\"}var s=new Array(arguments.length);for(var i=0;i<arguments.length;++i){s[i]=arguments[i]};return slow(s);}return getOrientation\");\n  procArgs.push(code.join(\"\"));\n  var proc = Function.apply(undefined, procArgs);\n  module.exports = proc.apply(undefined, [slowOrient].concat(CACHED));\n\n  for (var i = 0; i <= NUM_EXPAND; ++i) {\n    module.exports[i] = CACHED[i];\n  }\n}\n\ngenerateOrientationProc();","map":null,"metadata":{},"sourceType":"script"}