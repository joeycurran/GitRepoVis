{"ast":null,"code":"'use strict';\n\nvar warp = require('ndarray-warp');\n\nvar invert = require('gl-matrix-invert');\n\nmodule.exports = applyHomography;\n\nfunction applyHomography(dest, src, Xi) {\n  var n = src.dimension;\n  var X = invert([], Xi);\n  warp(dest, src, function (out_c, inp_c) {\n    for (var i = 0; i < n; ++i) {\n      out_c[i] = X[(n + 1) * n + i];\n\n      for (var j = 0; j < n; ++j) {\n        out_c[i] += X[(n + 1) * j + i] * inp_c[j];\n      }\n    }\n\n    var w = X[(n + 1) * (n + 1) - 1];\n\n    for (var j = 0; j < n; ++j) {\n      w += X[(n + 1) * j + n] * inp_c[j];\n    }\n\n    var wr = 1.0 / w;\n\n    for (var i = 0; i < n; ++i) {\n      out_c[i] *= wr;\n    }\n\n    return out_c;\n  });\n  return dest;\n}","map":null,"metadata":{},"sourceType":"script"}