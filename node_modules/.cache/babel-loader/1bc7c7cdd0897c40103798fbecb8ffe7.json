{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar Lib = require('../../lib');\n\nvar subTypes = require('../scatter/subtypes');\n\nvar handleMarkerDefaults = require('../scatter/marker_defaults');\n\nvar handleLineDefaults = require('../scatter/line_defaults');\n\nvar handleTextDefaults = require('../scatter/text_defaults');\n\nvar handleFillColorDefaults = require('../scatter/fillcolor_defaults');\n\nvar attributes = require('./attributes');\n\nmodule.exports = function supplyDefaults(traceIn, traceOut, defaultColor, layout) {\n  function coerce(attr, dflt) {\n    return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n  }\n\n  var len = handleLonLatDefaults(traceIn, traceOut, coerce);\n\n  if (!len) {\n    traceOut.visible = false;\n    return;\n  }\n\n  coerce('text');\n  coerce('texttemplate');\n  coerce('hovertext');\n  coerce('hovertemplate');\n  coerce('mode');\n  coerce('below');\n\n  if (subTypes.hasLines(traceOut)) {\n    handleLineDefaults(traceIn, traceOut, defaultColor, layout, coerce, {\n      noDash: true\n    });\n    coerce('connectgaps');\n  }\n\n  if (subTypes.hasMarkers(traceOut)) {\n    handleMarkerDefaults(traceIn, traceOut, defaultColor, layout, coerce, {\n      noLine: true\n    }); // array marker.size and marker.color are only supported with circles\n\n    var marker = traceOut.marker;\n\n    if (marker.symbol !== 'circle') {\n      if (Lib.isArrayOrTypedArray(marker.size)) marker.size = marker.size[0];\n      if (Lib.isArrayOrTypedArray(marker.color)) marker.color = marker.color[0];\n    }\n  }\n\n  if (subTypes.hasText(traceOut)) {\n    handleTextDefaults(traceIn, traceOut, layout, coerce, {\n      noSelect: true\n    });\n  }\n\n  coerce('fill');\n\n  if (traceOut.fill !== 'none') {\n    handleFillColorDefaults(traceIn, traceOut, defaultColor, coerce);\n  }\n\n  Lib.coerceSelectionMarkerOpacity(traceOut, coerce);\n};\n\nfunction handleLonLatDefaults(traceIn, traceOut, coerce) {\n  var lon = coerce('lon') || [];\n  var lat = coerce('lat') || [];\n  var len = Math.min(lon.length, lat.length);\n  traceOut._length = len;\n  return len;\n}","map":null,"metadata":{},"sourceType":"script"}