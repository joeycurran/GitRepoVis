{"ast":null,"code":"'use strict';\n\nexports.uniforms = runtimeUniforms;\nexports.attributes = runtimeAttributes;\nvar GL_TO_GLSL_TYPES = {\n  'FLOAT': 'float',\n  'FLOAT_VEC2': 'vec2',\n  'FLOAT_VEC3': 'vec3',\n  'FLOAT_VEC4': 'vec4',\n  'INT': 'int',\n  'INT_VEC2': 'ivec2',\n  'INT_VEC3': 'ivec3',\n  'INT_VEC4': 'ivec4',\n  'BOOL': 'bool',\n  'BOOL_VEC2': 'bvec2',\n  'BOOL_VEC3': 'bvec3',\n  'BOOL_VEC4': 'bvec4',\n  'FLOAT_MAT2': 'mat2',\n  'FLOAT_MAT3': 'mat3',\n  'FLOAT_MAT4': 'mat4',\n  'SAMPLER_2D': 'sampler2D',\n  'SAMPLER_CUBE': 'samplerCube'\n};\nvar GL_TABLE = null;\n\nfunction getType(gl, type) {\n  if (!GL_TABLE) {\n    var typeNames = Object.keys(GL_TO_GLSL_TYPES);\n    GL_TABLE = {};\n\n    for (var i = 0; i < typeNames.length; ++i) {\n      var tn = typeNames[i];\n      GL_TABLE[gl[tn]] = GL_TO_GLSL_TYPES[tn];\n    }\n  }\n\n  return GL_TABLE[type];\n}\n\nfunction runtimeUniforms(gl, program) {\n  var numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n  var result = [];\n\n  for (var i = 0; i < numUniforms; ++i) {\n    var info = gl.getActiveUniform(program, i);\n\n    if (info) {\n      var type = getType(gl, info.type);\n\n      if (info.size > 1) {\n        for (var j = 0; j < info.size; ++j) {\n          result.push({\n            name: info.name.replace('[0]', '[' + j + ']'),\n            type: type\n          });\n        }\n      } else {\n        result.push({\n          name: info.name,\n          type: type\n        });\n      }\n    }\n  }\n\n  return result;\n}\n\nfunction runtimeAttributes(gl, program) {\n  var numAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n  var result = [];\n\n  for (var i = 0; i < numAttributes; ++i) {\n    var info = gl.getActiveAttrib(program, i);\n\n    if (info) {\n      result.push({\n        name: info.name,\n        type: getType(gl, info.type)\n      });\n    }\n  }\n\n  return result;\n}","map":null,"metadata":{},"sourceType":"script"}