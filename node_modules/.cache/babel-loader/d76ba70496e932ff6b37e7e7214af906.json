{"ast":null,"code":"\"use strict\";\n\nmodule.exports = triangulateCube;\n\nvar perm = require(\"permutation-rank\");\n\nvar sgn = require(\"permutation-parity\");\n\nvar gamma = require(\"gamma\");\n\nfunction triangulateCube(dimension) {\n  if (dimension < 0) {\n    return [];\n  }\n\n  if (dimension === 0) {\n    return [[0]];\n  }\n\n  var dfactorial = Math.round(gamma(dimension + 1)) | 0;\n  var result = [];\n\n  for (var i = 0; i < dfactorial; ++i) {\n    var p = perm.unrank(dimension, i);\n    var cell = [0];\n    var v = 0;\n\n    for (var j = 0; j < p.length; ++j) {\n      v += 1 << p[j];\n      cell.push(v);\n    }\n\n    if (sgn(p) < 1) {\n      cell[0] = v;\n      cell[dimension] = 0;\n    }\n\n    result.push(cell);\n  }\n\n  return result;\n}","map":null,"metadata":{},"sourceType":"script"}