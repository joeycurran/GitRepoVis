{"ast":null,"code":"'use strict';\n\nmodule.exports = createBoxes;\n\nvar createBuffer = require('gl-buffer');\n\nvar createShader = require('gl-shader');\n\nvar shaders = require('./shaders');\n\nfunction Boxes(plot, vbo, shader) {\n  this.plot = plot;\n  this.vbo = vbo;\n  this.shader = shader;\n}\n\nvar proto = Boxes.prototype;\n\nproto.bind = function () {\n  var shader = this.shader;\n  this.vbo.bind();\n  this.shader.bind();\n  shader.attributes.coord.pointer();\n  shader.uniforms.screenBox = this.plot.screenBox;\n};\n\nproto.drawBox = function () {\n  var lo = [0, 0];\n  var hi = [0, 0];\n  return function (loX, loY, hiX, hiY, color) {\n    var plot = this.plot;\n    var shader = this.shader;\n    var gl = plot.gl;\n    lo[0] = loX;\n    lo[1] = loY;\n    hi[0] = hiX;\n    hi[1] = hiY;\n    shader.uniforms.lo = lo;\n    shader.uniforms.hi = hi;\n    shader.uniforms.color = color;\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  };\n}();\n\nproto.dispose = function () {\n  this.vbo.dispose();\n  this.shader.dispose();\n};\n\nfunction createBoxes(plot) {\n  var gl = plot.gl;\n  var vbo = createBuffer(gl, [0, 0, 0, 1, 1, 0, 1, 1]);\n  var shader = createShader(gl, shaders.boxVert, shaders.lineFrag);\n  return new Boxes(plot, vbo, shader);\n}","map":null,"metadata":{},"sourceType":"script"}