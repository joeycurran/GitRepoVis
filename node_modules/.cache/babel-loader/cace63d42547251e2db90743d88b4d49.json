{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar d3 = require('d3');\n\nvar Drawing = require('../../components/drawing');\n\nvar Color = require('../../components/color');\n\nvar DESELECTDIM = require('../../constants/interactions').DESELECTDIM;\n\nvar styleTextPoints = require('../bar/style').styleTextPoints;\n\nfunction style(gd, cd, sel) {\n  var s = sel ? sel : d3.select(gd).selectAll('g.funnellayer').selectAll('g.trace');\n  s.style('opacity', function (d) {\n    return d[0].trace.opacity;\n  });\n  s.each(function (d) {\n    var gTrace = d3.select(this);\n    var trace = d[0].trace;\n    gTrace.selectAll('.point > path').each(function (di) {\n      if (!di.isBlank) {\n        var cont = trace.marker;\n        d3.select(this).call(Color.fill, di.mc || cont.color).call(Color.stroke, di.mlc || cont.line.color).call(Drawing.dashLine, cont.line.dash, di.mlw || cont.line.width).style('opacity', trace.selectedpoints && !di.selected ? DESELECTDIM : 1);\n      }\n    });\n    styleTextPoints(gTrace, trace, gd);\n    gTrace.selectAll('.regions').each(function () {\n      d3.select(this).selectAll('path').style('stroke-width', 0).call(Color.fill, trace.connector.fillcolor);\n    });\n    gTrace.selectAll('.lines').each(function () {\n      var cont = trace.connector.line;\n      Drawing.lineGroupStyle(d3.select(this).selectAll('path'), cont.width, cont.color, cont.dash);\n    });\n  });\n}\n\nmodule.exports = {\n  style: style\n};","map":null,"metadata":{},"sourceType":"script"}