{"ast":null,"code":"\"use strict\";\n\nvar determinant = require(\"robust-determinant\");\n\nvar NUM_EXPAND = 6;\n\nfunction generateSolver(n) {\n  var funcName = \"robustLinearSolve\" + n + \"d\";\n  var code = [\"function \", funcName, \"(A,b){return [\"];\n\n  for (var i = 0; i < n; ++i) {\n    code.push(\"det([\");\n\n    for (var j = 0; j < n; ++j) {\n      if (j > 0) {\n        code.push(\",\");\n      }\n\n      code.push(\"[\");\n\n      for (var k = 0; k < n; ++k) {\n        if (k > 0) {\n          code.push(\",\");\n        }\n\n        if (k === i) {\n          code.push(\"+b[\", j, \"]\");\n        } else {\n          code.push(\"+A[\", j, \"][\", k, \"]\");\n        }\n      }\n\n      code.push(\"]\");\n    }\n\n    code.push(\"]),\");\n  }\n\n  code.push(\"det(A)]}return \", funcName);\n  var proc = new Function(\"det\", code.join(\"\"));\n\n  if (n < 6) {\n    return proc(determinant[n]);\n  }\n\n  return proc(determinant);\n}\n\nfunction robustLinearSolve0d() {\n  return [0];\n}\n\nfunction robustLinearSolve1d(A, b) {\n  return [[b[0]], [A[0][0]]];\n}\n\nvar CACHE = [robustLinearSolve0d, robustLinearSolve1d];\n\nfunction generateDispatch() {\n  while (CACHE.length < NUM_EXPAND) {\n    CACHE.push(generateSolver(CACHE.length));\n  }\n\n  var procArgs = [];\n  var code = [\"function dispatchLinearSolve(A,b){switch(A.length){\"];\n\n  for (var i = 0; i < NUM_EXPAND; ++i) {\n    procArgs.push(\"s\" + i);\n    code.push(\"case \", i, \":return s\", i, \"(A,b);\");\n  }\n\n  code.push(\"}var s=CACHE[A.length];if(!s)s=CACHE[A.length]=g(A.length);return s(A,b)}return dispatchLinearSolve\");\n  procArgs.push(\"CACHE\", \"g\", code.join(\"\"));\n  var proc = Function.apply(undefined, procArgs);\n  module.exports = proc.apply(undefined, CACHE.concat([CACHE, generateSolver]));\n\n  for (var i = 0; i < NUM_EXPAND; ++i) {\n    module.exports[i] = CACHE[i];\n  }\n}\n\ngenerateDispatch();","map":null,"metadata":{},"sourceType":"script"}