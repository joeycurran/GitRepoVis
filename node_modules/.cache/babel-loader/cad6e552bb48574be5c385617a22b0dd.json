{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar Lib = require('../../lib');\n\nvar Axes = require('../../plots/cartesian/axes');\n\nvar scatterMapboxHoverPoints = require('../scattermapbox/hover');\n\nmodule.exports = function hoverPoints(pointData, xval, yval) {\n  var pts = scatterMapboxHoverPoints(pointData, xval, yval);\n  if (!pts) return;\n  var newPointData = pts[0];\n  var cd = newPointData.cd;\n  var trace = cd[0].trace;\n  var di = cd[newPointData.index]; // let Fx.hover pick the color\n\n  delete newPointData.color;\n\n  if ('z' in di) {\n    var ax = newPointData.subplot.mockAxis;\n    newPointData.z = di.z;\n    newPointData.zLabel = Axes.tickText(ax, ax.c2l(di.z), 'hover').text;\n  }\n\n  newPointData.extraText = getExtraText(trace, di, cd[0].t.labels);\n  return [newPointData];\n};\n\nfunction getExtraText(trace, di, labels) {\n  if (trace.hovertemplate) return;\n  var hoverinfo = di.hi || trace.hoverinfo;\n  var parts = hoverinfo.split('+');\n  var isAll = parts.indexOf('all') !== -1;\n  var hasLon = parts.indexOf('lon') !== -1;\n  var hasLat = parts.indexOf('lat') !== -1;\n  var lonlat = di.lonlat;\n  var text = [];\n\n  function format(v) {\n    return v + '\\u00B0';\n  }\n\n  if (isAll || hasLon && hasLat) {\n    text.push('(' + format(lonlat[0]) + ', ' + format(lonlat[1]) + ')');\n  } else if (hasLon) {\n    text.push(labels.lon + format(lonlat[0]));\n  } else if (hasLat) {\n    text.push(labels.lat + format(lonlat[1]));\n  }\n\n  if (isAll || parts.indexOf('text') !== -1) {\n    Lib.fillText(di, trace, text);\n  }\n\n  return text.join('<br>');\n}","map":null,"metadata":{},"sourceType":"script"}