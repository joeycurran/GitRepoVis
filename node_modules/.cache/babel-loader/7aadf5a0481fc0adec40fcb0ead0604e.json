{"ast":null,"code":"\"use strict\";\n\nfunction dcubicHermite(p0, v0, p1, v1, t, f) {\n  var dh00 = 6 * t * t - 6 * t,\n      dh10 = 3 * t * t - 4 * t + 1,\n      dh01 = -6 * t * t + 6 * t,\n      dh11 = 3 * t * t - 2 * t;\n\n  if (p0.length) {\n    if (!f) {\n      f = new Array(p0.length);\n    }\n\n    for (var i = p0.length - 1; i >= 0; --i) {\n      f[i] = dh00 * p0[i] + dh10 * v0[i] + dh01 * p1[i] + dh11 * v1[i];\n    }\n\n    return f;\n  }\n\n  return dh00 * p0 + dh10 * v0 + dh01 * p1[i] + dh11 * v1;\n}\n\nfunction cubicHermite(p0, v0, p1, v1, t, f) {\n  var ti = t - 1,\n      t2 = t * t,\n      ti2 = ti * ti,\n      h00 = (1 + 2 * t) * ti2,\n      h10 = t * ti2,\n      h01 = t2 * (3 - 2 * t),\n      h11 = t2 * ti;\n\n  if (p0.length) {\n    if (!f) {\n      f = new Array(p0.length);\n    }\n\n    for (var i = p0.length - 1; i >= 0; --i) {\n      f[i] = h00 * p0[i] + h10 * v0[i] + h01 * p1[i] + h11 * v1[i];\n    }\n\n    return f;\n  }\n\n  return h00 * p0 + h10 * v0 + h01 * p1 + h11 * v1;\n}\n\nmodule.exports = cubicHermite;\nmodule.exports.derivative = dcubicHermite;","map":null,"metadata":{},"sourceType":"script"}