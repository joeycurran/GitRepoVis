{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar hovertemplateAttrs = require('../../plots/template_attributes').hovertemplateAttrs;\n\nvar texttemplateAttrs = require('../../plots/template_attributes').texttemplateAttrs;\n\nvar scatterGeoAttrs = require('../scattergeo/attributes');\n\nvar scatterAttrs = require('../scatter/attributes');\n\nvar mapboxAttrs = require('../../plots/mapbox/layout_attributes');\n\nvar plotAttrs = require('../../plots/attributes');\n\nvar colorScaleAttrs = require('../../components/colorscale/attributes');\n\nvar extendFlat = require('../../lib/extend').extendFlat;\n\nvar overrideAll = require('../../plot_api/edit_types').overrideAll;\n\nvar lineAttrs = scatterGeoAttrs.line;\nvar markerAttrs = scatterGeoAttrs.marker;\nmodule.exports = overrideAll({\n  lon: scatterGeoAttrs.lon,\n  lat: scatterGeoAttrs.lat,\n  // locations\n  // locationmode\n  mode: extendFlat({}, scatterAttrs.mode, {\n    dflt: 'markers',\n    description: ['Determines the drawing mode for this scatter trace.', 'If the provided `mode` includes *text* then the `text` elements', 'appear at the coordinates. Otherwise, the `text` elements', 'appear on hover.'].join(' ')\n  }),\n  text: extendFlat({}, scatterAttrs.text, {\n    description: ['Sets text elements associated with each (lon,lat) pair', 'If a single string, the same string appears over', 'all the data points.', 'If an array of string, the items are mapped in order to the', 'this trace\\'s (lon,lat) coordinates.', 'If trace `hoverinfo` contains a *text* flag and *hovertext* is not set,', 'these elements will be seen in the hover labels.'].join(' ')\n  }),\n  texttemplate: texttemplateAttrs({\n    editType: 'plot'\n  }, {\n    keys: ['lat', 'lon', 'text']\n  }),\n  hovertext: extendFlat({}, scatterAttrs.hovertext, {\n    description: ['Sets hover text elements associated with each (lon,lat) pair', 'If a single string, the same string appears over', 'all the data points.', 'If an array of string, the items are mapped in order to the', 'this trace\\'s (lon,lat) coordinates.', 'To be seen, trace `hoverinfo` must contain a *text* flag.'].join(' ')\n  }),\n  line: {\n    color: lineAttrs.color,\n    width: lineAttrs.width // TODO\n    // dash: dash\n\n  },\n  connectgaps: scatterAttrs.connectgaps,\n  marker: extendFlat({\n    symbol: {\n      valType: 'string',\n      dflt: 'circle',\n      role: 'style',\n      arrayOk: true,\n      description: ['Sets the marker symbol.', 'Full list: https://www.mapbox.com/maki-icons/', 'Note that the array `marker.color` and `marker.size`', 'are only available for *circle* symbols.'].join(' ')\n    },\n    opacity: markerAttrs.opacity,\n    size: markerAttrs.size,\n    sizeref: markerAttrs.sizeref,\n    sizemin: markerAttrs.sizemin,\n    sizemode: markerAttrs.sizemode\n  }, colorScaleAttrs('marker') // line\n  ),\n  fill: scatterGeoAttrs.fill,\n  fillcolor: scatterAttrs.fillcolor,\n  textfont: mapboxAttrs.layers.symbol.textfont,\n  textposition: mapboxAttrs.layers.symbol.textposition,\n  below: {\n    valType: 'string',\n    role: 'info',\n    description: ['Determines if this scattermapbox trace\\'s layers are to be inserted', 'before the layer with the specified ID.', 'By default, scattermapbox layers are inserted', 'above all the base layers.', 'To place the scattermapbox layers above every other layer, set `below` to *\\'\\'*.'].join(' ')\n  },\n  selected: {\n    marker: scatterAttrs.selected.marker\n  },\n  unselected: {\n    marker: scatterAttrs.unselected.marker\n  },\n  hoverinfo: extendFlat({}, plotAttrs.hoverinfo, {\n    flags: ['lon', 'lat', 'text', 'name']\n  }),\n  hovertemplate: hovertemplateAttrs()\n}, 'calc', 'nested');","map":null,"metadata":{},"sourceType":"script"}